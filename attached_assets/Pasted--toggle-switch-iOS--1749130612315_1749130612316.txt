"لطفاً یک کامپوننت تاگل سوئیچ (toggle switch) با ظاهر و عملکرد مشابه سوئیچ‌های سیستم عامل iOS، با استفاده از HTML و CSS ایجاد کنید. خروجی باید شامل موارد زیر باشد:

کد HTML کامل و ساختاریافته:

استفاده از یک عنصر <label> به عنوان محفظه اصلی تاگل که امکان کلیک روی کل آن را فراهم کند.
تعبیه یک <input type="checkbox"> مخفی (با opacity: 0 و ابعاد صفر) که وضعیت واقعی سوئیچ (روشن/خاموش) را مدیریت کند.
دو عنصر <span> تودرتو: یکی برای نمایش "مسیر" (track) سوئیچ و دیگری برای نمایش "دستگیره" (knob) متحرک.
کد CSS کامل برای استایل‌دهی:

مسیر (Track):
شکل مستطیلی با گوشه‌های کاملاً گرد (border-radius مناسب برای ایجاد حالت کپسولی).
رنگ پس‌زمینه پیش‌فرض (حالت خاموش): خاکستری روشن (مانند #ccc).
رنگ پس‌زمینه در حالت روشن (زمانی که چک‌باکس تیک خورده است): سبز استاندارد iOS (مانند #4CD964).
انیمیشن نرم (transition) برای تغییر رنگ پس‌زمینه.
دستگیره (Knob):
شکل دایره‌ای (border-radius: 50%).
رنگ پس‌زمینه: سفید.
ایجاد سایه ملایم (box-shadow) برای عمق بیشتر.
موقعیت‌دهی دقیق درون مسیر با استفاده از position: absolute.
در حالت خاموش: قرارگیری در سمت چپ مسیر.
در حالت روشن: حرکت به سمت راست مسیر با استفاده از transform: translateX().
انیمیشن نرم (transition) برای حرکت دستگیره.
منطق CSS: استفاده از شبه‌کلاس :checked روی چک‌باکس مخفی و انتخابگر همسایه (+) یا (~) برای اعمال استایل‌های حالت "روشن" به مسیر و دستگیره.
ابعاد: تعریف ابعاد مشخص و متناسب برای سوئیچ، مسیر و دستگیره (مثلاً عرض سوئیچ 60px و ارتفاع 34px).
حالت فوکوس (اختیاری اما مفید): افزودن یک استایل فوکوس بصری برای دسترسی‌پذیری بهتر زمانی که کاربر با کیبورد روی سوئیچ فوکوس می‌کند.
استایل‌های عمومی صفحه (برای نمایش بهتر): شامل استایل‌هایی برای قرار دادن تاگل در مرکز صفحه و یک پس‌زمینه ساده برای بدنه HTML.
توضیحات کامل و شفاف در مورد کد:

شرح ساختار HTML و نقش هر عنصر.
توضیح منطق CSS، به ویژه چگونگی عملکرد انتخابگر :checked برای تغییر استایل‌ها و نحوه پیاده‌سازی انیمیشن‌ها.
بیان اینکه برای عملکرد اصلی سوئیچ، نیازی به جاوا اسکریپت نیست.
کد جاوا اسکریپت (اختیاری و نمونه):

ارائه یک قطعه کد جاوا اسکریپت کوتاه و کامنت‌گذاری شده که نشان دهد چگونه می‌توان به رویداد change چک‌باکس گوش داد و بر اساس وضعیت آن (روشن/خاموش) عملیاتی را انجام داد (مثلاً چاپ یک پیام در کنسول). این بخش باید به عنوان یک قابلیت اضافی و نه ضروری معرفی شود.
فرمت خروجی:

ارائه کد HTML و CSS در بلوک‌های کد جداگانه و خوانا.
ارائه توضیحات به زبان فارسی روان.
کل پاسخ باید به گونه‌ای باشد که کاربر بتواند آن را به راحتی در یک فایل .html کپی کرده و نتیجه را مستقیماً در مرورگر مشاهده کند (یعنی شامل تگ‌های <!DOCTYPE html>, <html>, <head>, <style>, <body> باشد).
در صورت امکان، استفاده از متغیرهای CSS برای رنگ‌ها و ابعاد اصلی جهت سهولت در سفارشی‌سازی توسط کاربر.